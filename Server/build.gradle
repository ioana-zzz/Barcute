plugins {
    id 'java'
    id 'application'
    id 'io.spring.dependency-management' version '1.1.4'
    id 'org.springframework.boot' version '3.2.6'
}

group = 'org.example'
version = '1.0-SNAPSHOT'

repositories {
    mavenCentral()
}

dependencies {
    testImplementation platform('org.junit:junit-bom:5.10.0')
    testImplementation 'org.junit.jupiter:junit-jupiter'
    implementation project(":Domain")
    implementation project(":Repository")
    implementation project(":Services")
    implementation project(":Network")
    implementation 'org.apache.logging.log4j:log4j-api:2.20.0'
    implementation 'org.apache.logging.log4j:log4j-core:2.20.0'
    implementation 'org.hibernate.orm:hibernate-community-dialects:6.4.4.Final'
    implementation 'org.hibernate.orm:hibernate-core:6.4.4.Final'


    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
  // implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'com.fasterxml.jackson.core:jackson-annotations'
    implementation 'jakarta.persistence:jakarta.persistence-api:3.1.0'
  // implementation 'org.springframework.boot:spring-boot-starter-websocket'

    implementation 'org.springframework.boot:spring-boot-starter'
    testImplementation 'com.jayway.jsonpath:json-path'
    testImplementation platform('org.junit:junit-bom:5.10.0')
    testImplementation 'org.junit.jupiter:junit-jupiter'
    testImplementation('org.springframework.boot:spring-boot-starter-test')
    implementation 'org.postgresql:postgresql:42.7.3'

}


application{
    mainClass = 'org.example.StartJsonServer'
}

tasks.named('bootRun') {
    mainClass = 'org.example.RestServices.StartRestServices'
}


test {
    useJUnitPlatform()
}